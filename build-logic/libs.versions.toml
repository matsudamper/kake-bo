[versions]
kotlin = "2.0.20"
apollo = "4.0.0-beta.7"
ktor = "3.0.0-rc-1"
activity = "1.9.2"
appcompat = "1.7.0"
agp = "8.5.2"
jackson = "2.17.2"

[plugins]
apollo = { id = "com.apollographql.apollo3", version.ref = "apollo" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

[libraries]
kotlinRefrect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Ktor
ktorServerCore = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktorServerEngine = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktorServerStatusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktorServerCors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktorServerDefaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktorServerFowardedHeader = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktorServerCompression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktorSerializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorServerContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktorServerCallLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorClientJs = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Apollo
apolloRuntime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }
apolloNormalizedCache = { module = "com.apollographql.apollo3:apollo-normalized-cache", version.ref = "apollo" }
apolloAdapters = { module = "com.apollographql.apollo3:apollo-adapters", version.ref = "apollo" }

# Jackson
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

# WebAUth4J
webauth4jCore = { module = "com.webauthn4j:webauthn4j-core", version.require = "0.26.0.RELEASE" }

opentelemetryApi = { module = "io.opentelemetry:opentelemetry-api", version.require = "1.42.1" }

# Android
androidActivityActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidAppCompatAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

# Test
kotestRunnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.require = "5.9.1" }

# Mail
jakarta-mail-api = { module = "jakarta.mail:jakarta.mail-api", version.require = "2.1.3" }
jakarta-mail = { module = "org.eclipse.angus:jakarta.mail", version.require = "2.0.3" }
angus-mail = { module = "org.eclipse.angus:angus-mail", version.require = "2.0.3" }
jakarta-activation-api = { module = "jakarta.activation:jakarta.activation-api", version.require = "2.1.3" }
