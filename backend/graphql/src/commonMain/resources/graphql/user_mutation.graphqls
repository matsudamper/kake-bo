type UserMutation {
    userLogin(name: String!, password: String!): UserLoginResult!
    settingsMutation: SettingsMutation @lazy
    importMail(mailIds: [MailId!]!): ImportMailResult!
    deleteMail(mailIds: [MailId!]!): DeleteMailResult!
    addUsage(usage: AddUsageQuery!): MoneyUsage!
    addCategory(input: AddCategoryInput!) : AddCategoryResult!
    updateCategory(id: MoneyUsageCategoryId!, query: UpdateCategoryQuery!): MoneyUsageCategory!
    addSubCategory(input: AddSubCategoryInput!) : AddSubCategoryResult!
    updateSubCategory(id: MoneyUsageSubCategoryId!, query: UpdateSubCategoryQuery!): MoneyUsageSubCategory!
    deleteSubCategory(id: MoneyUsageSubCategoryId!): Boolean!

    addImportedMailCategoryFilter(input: AddImportedMailCategoryFilterInput!): ImportedMailCategoryFilter
}

input AddImportedMailCategoryFilterInput {
    title: String!
}

input UpdateSubCategoryQuery {
    name: String
}

input UpdateCategoryQuery {
    name: String
}

input AddSubCategoryInput {
    name: String!
    categoryId: MoneyUsageCategoryId!
}
type AddSubCategoryResult {
    subCategory: MoneyUsageSubCategory
    error: AddSubCategoryError
}
enum AddSubCategoryError {
    CATEGORY_NOT_FOUND,
}

input AddCategoryInput {
    name: String!
}

type AddCategoryResult {
    category: MoneyUsageCategory
}

input AddUsageQuery {
    title: String!
    description: String!
    subCategoryId: MoneyUsageSubCategoryId
    amount: Int!
    date: LocalDateTime!
}

type DeleteMailResult {
    error: DeleteMailResultError
    isSuccess: Boolean!
}

enum DeleteMailResultError {
    InternalServerError,
    MailConfigNotFound,
    MailServerNotConnected,
}

type ImportMailResult {
    isSuccess: Boolean!
}

type UserLoginResult {
    isSuccess: Boolean!
}

type SettingsMutation {
    updateImapConfig(config: UpdateUserImapConfigInput!) : UserImapConfig
}

input UpdateUserImapConfigInput {
    host: String
    port: Int
    userName: String
    password: String
}
