type User {
    isLoggedIn: Boolean!
    settings: UserSettings! @lazy
    userMailAttributes: UserMailAttributes!
    importedMailAttributes: ImportedMailAttributes!
}

type ImportedMailAttributes {
    count(query: ImportedMailQueryFilter!): Int @lazy
    mails(mailQuery : ImportedMailQuery!): ImportedMailConnection! @lazy
}

input ImportedMailQuery {
    size: Int!
    cursor: String
    filter: ImportedMailQueryFilter
}

input ImportedMailQueryFilter {
    isLinked: Boolean!
}

type ImportedMailConnection {
    cursor: String
    mails: [ImportedMail!]!
}

type UserMailAttributes {
    mailCount: Int @lazy
    mail(mailQuery : MailQuery!):UserMailConnection! @lazy
}

type UserMailConnection {
    error: UserMailError
    usrMails: [UserMail!]!
    cursor: String
}

enum UserMailError {
    InternalServerError,
    MailConfigNotFound,
    MailServerNotConnected,
}

input MailQuery {
    size: Int!
    cursor: String
}

type UserSettings {
    imapConfig: UserImapConfig @lazy
}

type UserImapConfig {
    host: String
    port     :Int
    userName :String
    hasPassword :Boolean
}

type UserMail {
    id: MailId!
    subject: String!
    from: [String!]!
    sender: String
    plain: String
    html: String
    time: DateTime!
}

type ImportedMail {
    id: ImportedMailId!
    subject: String!
    from: String!
    plain: String
    html: String
    time: DateTime!
}
