/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import java.time.LocalDateTime

import net.matsudamper.money.db.schema.tables.JCategoryMailFilterConditions

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JCategoryMailFilterConditionsRecord() : UpdatableRecordImpl<JCategoryMailFilterConditionsRecord>(JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS), Record5<Int?, Int?, Int?, LocalDateTime?, LocalDateTime?> {

    open var categoryMailFilterConditionId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var categoryMailFilterConditionGroupId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var userId: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var createdDatetime: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updateDatetime: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Int?, Int?, Int?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row5<Int?, Int?, Int?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row5<Int?, Int?, Int?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row5<Int?, Int?, Int?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Int?> = JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS.CATEGORY_MAIL_FILTER_CONDITION_ID
    override fun field2(): Field<Int?> = JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS.CATEGORY_MAIL_FILTER_CONDITION_GROUP_ID
    override fun field3(): Field<Int?> = JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS.USER_ID
    override fun field4(): Field<LocalDateTime?> = JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS.CREATED_DATETIME
    override fun field5(): Field<LocalDateTime?> = JCategoryMailFilterConditions.CATEGORY_MAIL_FILTER_CONDITIONS.UPDATE_DATETIME
    override fun component1(): Int? = categoryMailFilterConditionId
    override fun component2(): Int? = categoryMailFilterConditionGroupId
    override fun component3(): Int? = userId
    override fun component4(): LocalDateTime? = createdDatetime
    override fun component5(): LocalDateTime? = updateDatetime
    override fun value1(): Int? = categoryMailFilterConditionId
    override fun value2(): Int? = categoryMailFilterConditionGroupId
    override fun value3(): Int? = userId
    override fun value4(): LocalDateTime? = createdDatetime
    override fun value5(): LocalDateTime? = updateDatetime

    override fun value1(value: Int?): JCategoryMailFilterConditionsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Int?): JCategoryMailFilterConditionsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): JCategoryMailFilterConditionsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: LocalDateTime?): JCategoryMailFilterConditionsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: LocalDateTime?): JCategoryMailFilterConditionsRecord {
        set(4, value)
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: Int?, value4: LocalDateTime?, value5: LocalDateTime?): JCategoryMailFilterConditionsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised JCategoryMailFilterConditionsRecord
     */
    constructor(categoryMailFilterConditionId: Int? = null, categoryMailFilterConditionGroupId: Int? = null, userId: Int? = null, createdDatetime: LocalDateTime? = null, updateDatetime: LocalDateTime? = null): this() {
        this.categoryMailFilterConditionId = categoryMailFilterConditionId
        this.categoryMailFilterConditionGroupId = categoryMailFilterConditionGroupId
        this.userId = userId
        this.createdDatetime = createdDatetime
        this.updateDatetime = updateDatetime
        resetChangedOnNotNull()
    }
}
