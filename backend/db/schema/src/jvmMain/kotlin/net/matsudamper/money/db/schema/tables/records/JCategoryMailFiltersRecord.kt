/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import java.time.LocalDateTime

import net.matsudamper.money.db.schema.tables.JCategoryMailFilters

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JCategoryMailFiltersRecord() : UpdatableRecordImpl<JCategoryMailFiltersRecord>(JCategoryMailFilters.CATEGORY_MAIL_FILTERS), Record8<Int?, Int?, String?, Int?, Int?, LocalDateTime?, LocalDateTime?, Int?> {

    open var categoryMailFilterId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var userId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var moneyUsageSubCategoryId: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var categoryMailFilterConditionOperatorTypeId: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var createdDatetime: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open var updateDatetime: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var orderNumber: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Int?, Int?, String?, Int?, Int?, LocalDateTime?, LocalDateTime?, Int?> = super.fieldsRow() as Row8<Int?, Int?, String?, Int?, Int?, LocalDateTime?, LocalDateTime?, Int?>
    override fun valuesRow(): Row8<Int?, Int?, String?, Int?, Int?, LocalDateTime?, LocalDateTime?, Int?> = super.valuesRow() as Row8<Int?, Int?, String?, Int?, Int?, LocalDateTime?, LocalDateTime?, Int?>
    override fun field1(): Field<Int?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.CATEGORY_MAIL_FILTER_ID
    override fun field2(): Field<Int?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.USER_ID
    override fun field3(): Field<String?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.TITLE
    override fun field4(): Field<Int?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.MONEY_USAGE_SUB_CATEGORY_ID
    override fun field5(): Field<Int?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.CATEGORY_MAIL_FILTER_CONDITION_OPERATOR_TYPE_ID
    override fun field6(): Field<LocalDateTime?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.CREATED_DATETIME
    override fun field7(): Field<LocalDateTime?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.UPDATE_DATETIME
    override fun field8(): Field<Int?> = JCategoryMailFilters.CATEGORY_MAIL_FILTERS.ORDER_NUMBER
    override fun component1(): Int? = categoryMailFilterId
    override fun component2(): Int? = userId
    override fun component3(): String? = title
    override fun component4(): Int? = moneyUsageSubCategoryId
    override fun component5(): Int? = categoryMailFilterConditionOperatorTypeId
    override fun component6(): LocalDateTime? = createdDatetime
    override fun component7(): LocalDateTime? = updateDatetime
    override fun component8(): Int? = orderNumber
    override fun value1(): Int? = categoryMailFilterId
    override fun value2(): Int? = userId
    override fun value3(): String? = title
    override fun value4(): Int? = moneyUsageSubCategoryId
    override fun value5(): Int? = categoryMailFilterConditionOperatorTypeId
    override fun value6(): LocalDateTime? = createdDatetime
    override fun value7(): LocalDateTime? = updateDatetime
    override fun value8(): Int? = orderNumber

    override fun value1(value: Int?): JCategoryMailFiltersRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Int?): JCategoryMailFiltersRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): JCategoryMailFiltersRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): JCategoryMailFiltersRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): JCategoryMailFiltersRecord {
        set(4, value)
        return this
    }

    override fun value6(value: LocalDateTime?): JCategoryMailFiltersRecord {
        set(5, value)
        return this
    }

    override fun value7(value: LocalDateTime?): JCategoryMailFiltersRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Int?): JCategoryMailFiltersRecord {
        set(7, value)
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: Int?, value5: Int?, value6: LocalDateTime?, value7: LocalDateTime?, value8: Int?): JCategoryMailFiltersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised JCategoryMailFiltersRecord
     */
    constructor(categoryMailFilterId: Int? = null, userId: Int? = null, title: String? = null, moneyUsageSubCategoryId: Int? = null, categoryMailFilterConditionOperatorTypeId: Int? = null, createdDatetime: LocalDateTime? = null, updateDatetime: LocalDateTime? = null, orderNumber: Int? = null): this() {
        this.categoryMailFilterId = categoryMailFilterId
        this.userId = userId
        this.title = title
        this.moneyUsageSubCategoryId = moneyUsageSubCategoryId
        this.categoryMailFilterConditionOperatorTypeId = categoryMailFilterConditionOperatorTypeId
        this.createdDatetime = createdDatetime
        this.updateDatetime = updateDatetime
        this.orderNumber = orderNumber
        resetChangedOnNotNull()
    }
}
