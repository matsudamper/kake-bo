/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import net.matsudamper.money.db.schema.tables.JCategoryMailFilterConditionOperatorType

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JCategoryMailFilterConditionOperatorTypeRecord() : TableRecordImpl<JCategoryMailFilterConditionOperatorTypeRecord>(JCategoryMailFilterConditionOperatorType.CATEGORY_MAIL_FILTER_CONDITION_OPERATOR_TYPE), Record2<Int?, String?> {

    open var categoryMailFilterConditionOperatorTypeId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var operatorName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<Int?, String?> = super.fieldsRow() as Row2<Int?, String?>
    override fun valuesRow(): Row2<Int?, String?> = super.valuesRow() as Row2<Int?, String?>
    override fun field1(): Field<Int?> = JCategoryMailFilterConditionOperatorType.CATEGORY_MAIL_FILTER_CONDITION_OPERATOR_TYPE.CATEGORY_MAIL_FILTER_CONDITION_OPERATOR_TYPE_ID
    override fun field2(): Field<String?> = JCategoryMailFilterConditionOperatorType.CATEGORY_MAIL_FILTER_CONDITION_OPERATOR_TYPE.OPERATOR_NAME
    override fun component1(): Int? = categoryMailFilterConditionOperatorTypeId
    override fun component2(): String? = operatorName
    override fun value1(): Int? = categoryMailFilterConditionOperatorTypeId
    override fun value2(): String? = operatorName

    override fun value1(value: Int?): JCategoryMailFilterConditionOperatorTypeRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): JCategoryMailFilterConditionOperatorTypeRecord {
        set(1, value)
        return this
    }

    override fun values(value1: Int?, value2: String?): JCategoryMailFilterConditionOperatorTypeRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised
     * JCategoryMailFilterConditionOperatorTypeRecord
     */
    constructor(categoryMailFilterConditionOperatorTypeId: Int? = null, operatorName: String? = null): this() {
        this.categoryMailFilterConditionOperatorTypeId = categoryMailFilterConditionOperatorTypeId
        this.operatorName = operatorName
        resetChangedOnNotNull()
    }
}
