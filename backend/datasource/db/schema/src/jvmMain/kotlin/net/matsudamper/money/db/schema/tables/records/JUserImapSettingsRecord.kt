/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import net.matsudamper.money.db.schema.tables.JUserImapSettings

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JUserImapSettingsRecord() : UpdatableRecordImpl<JUserImapSettingsRecord>(JUserImapSettings.USER_IMAP_SETTINGS) {

    open var userId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var host: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var port: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var useName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var password: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised JUserImapSettingsRecord
     */
    constructor(userId: Int? = null, host: String? = null, port: Int? = null, useName: String? = null, password: String? = null): this() {
        this.userId = userId
        this.host = host
        this.port = port
        this.useName = useName
        this.password = password
        resetChangedOnNotNull()
    }
}
