/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import java.time.LocalDateTime

import net.matsudamper.money.db.schema.tables.JUsers

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JUsersRecord() : UpdatableRecordImpl<JUsersRecord>(JUsers.USERS) {

    open var userId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var userName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var createdDatetime: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised JUsersRecord
     */
    constructor(userId: Int? = null, userName: String? = null, createdDatetime: LocalDateTime? = null): this() {
        this.userId = userId
        this.userName = userName
        this.createdDatetime = createdDatetime
        resetChangedOnNotNull()
    }
}
