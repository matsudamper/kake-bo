/*
 * This file is generated by jOOQ.
 */
package net.matsudamper.money.db.schema.tables.records


import java.time.LocalDateTime

import net.matsudamper.money.db.schema.tables.JWebAuthAuthenticator

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JWebAuthAuthenticatorRecord() : UpdatableRecordImpl<JWebAuthAuthenticatorRecord>(JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR), Record10<Int?, Int?, String?, String?, String?, String?, String?, Long?, LocalDateTime?, LocalDateTime?> {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var userId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var name: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var attestationStatement: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var attestationStatementFormat: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var attestedCredentialData: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var authenticatorExtensions: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var counter: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<Int?, Int?, String?, String?, String?, String?, String?, Long?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row10<Int?, Int?, String?, String?, String?, String?, String?, Long?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row10<Int?, Int?, String?, String?, String?, String?, String?, Long?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row10<Int?, Int?, String?, String?, String?, String?, String?, Long?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Int?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.ID
    override fun field2(): Field<Int?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.USER_ID
    override fun field3(): Field<String?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.NAME
    override fun field4(): Field<String?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.ATTESTATION_STATEMENT
    override fun field5(): Field<String?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.ATTESTATION_STATEMENT_FORMAT
    override fun field6(): Field<String?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.ATTESTED_CREDENTIAL_DATA
    override fun field7(): Field<String?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.AUTHENTICATOR_EXTENSIONS
    override fun field8(): Field<Long?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.COUNTER
    override fun field9(): Field<LocalDateTime?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.CREATED_AT
    override fun field10(): Field<LocalDateTime?> = JWebAuthAuthenticator.WEB_AUTH_AUTHENTICATOR.UPDATED_AT
    override fun component1(): Int? = id
    override fun component2(): Int? = userId
    override fun component3(): String? = name
    override fun component4(): String? = attestationStatement
    override fun component5(): String? = attestationStatementFormat
    override fun component6(): String? = attestedCredentialData
    override fun component7(): String? = authenticatorExtensions
    override fun component8(): Long? = counter
    override fun component9(): LocalDateTime? = createdAt
    override fun component10(): LocalDateTime? = updatedAt
    override fun value1(): Int? = id
    override fun value2(): Int? = userId
    override fun value3(): String? = name
    override fun value4(): String? = attestationStatement
    override fun value5(): String? = attestationStatementFormat
    override fun value6(): String? = attestedCredentialData
    override fun value7(): String? = authenticatorExtensions
    override fun value8(): Long? = counter
    override fun value9(): LocalDateTime? = createdAt
    override fun value10(): LocalDateTime? = updatedAt

    override fun value1(value: Int?): JWebAuthAuthenticatorRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Int?): JWebAuthAuthenticatorRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): JWebAuthAuthenticatorRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): JWebAuthAuthenticatorRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): JWebAuthAuthenticatorRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): JWebAuthAuthenticatorRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): JWebAuthAuthenticatorRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Long?): JWebAuthAuthenticatorRecord {
        set(7, value)
        return this
    }

    override fun value9(value: LocalDateTime?): JWebAuthAuthenticatorRecord {
        set(8, value)
        return this
    }

    override fun value10(value: LocalDateTime?): JWebAuthAuthenticatorRecord {
        set(9, value)
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: Long?, value9: LocalDateTime?, value10: LocalDateTime?): JWebAuthAuthenticatorRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised JWebAuthAuthenticatorRecord
     */
    constructor(id: Int? = null, userId: Int? = null, name: String? = null, attestationStatement: String? = null, attestationStatementFormat: String? = null, attestedCredentialData: String? = null, authenticatorExtensions: String? = null, counter: Long? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.userId = userId
        this.name = name
        this.attestationStatement = attestationStatement
        this.attestationStatementFormat = attestationStatementFormat
        this.attestedCredentialData = attestedCredentialData
        this.authenticatorExtensions = authenticatorExtensions
        this.counter = counter
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
