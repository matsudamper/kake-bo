# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

directive @lazy on FIELD_DEFINITION

type AdminAddUserResult {
    errorType: [AdminAddUserErrorType!]!
}

type AdminLoginResult {
    isSuccess: Boolean!
}

type AdminMutation {
    addUser(name: String!, password: String!): AdminAddUserResult!
    adminLogin(password: String!): AdminLoginResult!
}

type DeleteMailResult {
    error: DeleteMailResultError
    isSuccess: Boolean!
}

type ImportMailResult {
    isSuccess: Boolean!
}

type ImportedMail {
    from: String!
    html: String
    id: ImportedMailId!
    plain: String
    subject: String!
    suggestUsage: SuggestMoneyUsage
    time: DateTime!
}

type ImportedMailAttributes {
    count(query: ImportedMailQueryFilter!): Int
    mails(mailQuery: ImportedMailQuery!): ImportedMailConnection!
}

type ImportedMailConnection {
    cursor: String
    mails: [ImportedMail!]!
}

type MoneyUsageService {
    id: MoneyUsageServiceId!
    name: String!
}

type MoneyUsageType {
    id: MoneyUsageTypeId!
    name: String!
}

type Mutation {
    adminMutation: AdminMutation!
    userMutation: UserMutation!
}

type Query {
    user: User
}

type SettingsMutation {
    updateImapConfig(config: UpdateUserImapConfigInput!): UserImapConfig
}

type SuggestMoneyUsage {
    price: Int!
    service: MoneyUsageService
    title: String!
    type: MoneyUsageType
}

type User {
    importedMailAttributes: ImportedMailAttributes!
    isLoggedIn: Boolean!
    settings: UserSettings!
    userMailAttributes: UserMailAttributes!
}

type UserImapConfig {
    hasPassword: Boolean
    host: String
    port: Int
    userName: String
}

type UserLoginResult {
    isSuccess: Boolean!
}

type UserMail {
    from: [String!]!
    html: String
    id: MailId!
    plain: String
    sender: String
    subject: String!
    time: DateTime!
}

type UserMailAttributes {
    mail(mailQuery: MailQuery!): UserMailConnection!
    mailCount: Int
}

type UserMailConnection {
    cursor: String
    error: UserMailError
    usrMails: [UserMail!]!
}

type UserMutation {
    deleteMail(mailIds: [MailId!]!): DeleteMailResult!
    importMail(mailIds: [MailId!]!): ImportMailResult!
    settingsMutation: SettingsMutation
    userLogin(name: String!, password: String!): UserLoginResult!
}

type UserSettings {
    imapConfig: UserImapConfig
}

enum AdminAddUserErrorType {
    PasswordInvalidChar
    PasswordLength
    Unknown
    UserNameAlreadyExists
    UserNameInvalidChar
    UserNameLength
}

enum DeleteMailResultError {
    InternalServerError
    MailConfigNotFound
    MailServerNotConnected
}

enum UserMailError {
    InternalServerError
    MailConfigNotFound
    MailServerNotConnected
}

"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

scalar ImportedMailId

scalar MailId

scalar MoneyUsageServiceId

scalar MoneyUsageTypeId

input ImportedMailQuery {
    cursor: String
    filter: ImportedMailQueryFilter
    size: Int!
}

input ImportedMailQueryFilter {
    isLinked: Boolean!
}

input MailQuery {
    cursor: String
    size: Int!
}

input UpdateUserImapConfigInput {
    host: String
    password: String
    port: Int
    userName: String
}
