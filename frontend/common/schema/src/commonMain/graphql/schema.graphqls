# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

directive @lazy on FIELD_DEFINITION

type AdminAddUserResult {
    errorType: [AdminAddUserErrorType!]!
}

type AdminLoginResult {
    isSuccess: Boolean!
}

type AdminMutation {
    addUser(name: String!, password: String!): AdminAddUserResult!
    adminLogin(password: String!): AdminLoginResult!
}

type Mutation {
    adminMutation: AdminMutation!
    userMutation: UserMutation!
}

type Query {
    user: User
}

type SettingsMutation {
    updateImapConfig(config: UpdateUserImapConfigInput!): UserImapConfig
}

type User {
    isLoggedIn: Boolean!
    mail(mailQuery: MailQuery!): UserMailConnection!
    settings: UserSettings!
}

type UserImapConfig {
    hasPassword: Boolean
    host: String
    port: Int
    userName: String
}

type UserLoginResult {
    isSuccess: Boolean!
}

type UserMail {
    from: [String!]!
    html: String
    id: MailId!
    plain: String
    sender: String
    subject: String!
    time: DateTime!
}

type UserMailConnection {
    cursor: String
    error: UserMailError
    usrMails: [UserMail!]!
}

type UserMutation {
    settingsMutation: SettingsMutation
    userLogin(name: String!, password: String!): UserLoginResult!
}

type UserSettings {
    imapConfig: UserImapConfig
}

enum AdminAddUserErrorType {
    PasswordInvalidChar
    PasswordLength
    Unknown
    UserNameAlreadyExists
    UserNameInvalidChar
    UserNameLength
}

enum UserMailError {
    InternalServerError
    MailConfigNotFound
    MailServerNotConnected
}

"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

scalar MailId

input MailQuery {
    cursor: String
    size: Int!
}

input UpdateUserImapConfigInput {
    host: String
    password: String
    port: Int
    userName: String
}
